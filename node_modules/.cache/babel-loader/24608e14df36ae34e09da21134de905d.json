{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neeleshwar\\\\Desktop\\\\quiz-app-master\\\\quiz_app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./App.css\"; // import \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const questions = [{\n    questionText: \"What is the capital of France?\",\n    answerOptions: [{\n      answerText: \"New York\",\n      isCorrect: false\n    }, {\n      answerText: \"London\",\n      isCorrect: false\n    }, {\n      answerText: \"Paris\",\n      isCorrect: true\n    }, {\n      answerText: \"Dublin\",\n      isCorrect: false\n    }]\n  }, {\n    questionText: \"Who is CEO of Tesla?\",\n    answerOptions: [{\n      answerText: \"Jeff Bezos\",\n      isCorrect: false\n    }, {\n      answerText: \"Elon Musk\",\n      isCorrect: true\n    }, {\n      answerText: \"Bill Gates\",\n      isCorrect: false\n    }, {\n      answerText: \"Tony Stark\",\n      isCorrect: false\n    }]\n  }, {\n    questionText: \"The iPhone was created by which company?\",\n    answerOptions: [{\n      answerText: \"Apple\",\n      isCorrect: true\n    }, {\n      answerText: \"Intel\",\n      isCorrect: false\n    }, {\n      answerText: \"Amazon\",\n      isCorrect: false\n    }, {\n      answerText: \"Microsoft\",\n      isCorrect: false\n    }]\n  }, {\n    questionText: \"How many Harry Potter books are there?\",\n    answerOptions: [{\n      answerText: \"1\",\n      isCorrect: false\n    }, {\n      answerText: \"4\",\n      isCorrect: false\n    }, {\n      answerText: \"6\",\n      isCorrect: false\n    }, {\n      answerText: \"7\",\n      isCorrect: true\n    }]\n  }];\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n\n  const handleAnswerButtonClick = isCorrect => {\n    if (isCorrect === true) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: showScore ?\n      /*#__PURE__*/\n      //if showScore=true then show the scores.... else show the questions\n      _jsxDEV(\"div\", {\n        className: \"score-section\",\n        children: [\"You scored \", score, \" out of \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Question \", currentQuestion + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), \"/\", questions.length, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: questions[currentQuestion].questionText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          style: {\n            marginTop: '0%'\n          },\n          children: questions[currentQuestion].answerOptions.map((answerOption ///map through the array of questions showing answerOptions alongSide\n          ) =>\n          /*#__PURE__*/\n          _jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                margin: \"10px\"\n              },\n              className: \"btn btn-primary\",\n              onClick: () => handleAnswerButtonClick(answerOption.isCorrect) //handleAnswerButtonClick function takes an argument of isCorrect to check the answer is correct or not\n              //if answer is correct increment score\n              ,\n              children: answerOption.answerText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"0BtWTSV6WaEEISJY2tt5d47HMss=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Neeleshwar/Desktop/quiz-app-master/quiz_app/src/App.js"],"names":["useState","App","questions","questionText","answerOptions","answerText","isCorrect","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","handleAnswerButtonClick","nextQuestion","length","marginTop","map","answerOption","margin"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n\nexport default function App() {\n  const questions = [\n    {\n      questionText: \"What is the capital of France?\",\n      answerOptions: [\n        { answerText: \"New York\", isCorrect: false },\n        { answerText: \"London\", isCorrect: false },\n        { answerText: \"Paris\", isCorrect: true },\n        { answerText: \"Dublin\", isCorrect: false },\n      ],\n    },\n    {\n      questionText: \"Who is CEO of Tesla?\",\n      answerOptions: [\n        { answerText: \"Jeff Bezos\", isCorrect: false },\n        { answerText: \"Elon Musk\", isCorrect: true },\n        { answerText: \"Bill Gates\", isCorrect: false },\n        { answerText: \"Tony Stark\", isCorrect: false },\n      ],\n    },\n    {\n      questionText: \"The iPhone was created by which company?\",\n      answerOptions: [\n        { answerText: \"Apple\", isCorrect: true },\n        { answerText: \"Intel\", isCorrect: false },\n        { answerText: \"Amazon\", isCorrect: false },\n        { answerText: \"Microsoft\", isCorrect: false },\n      ],\n    },\n    {\n      questionText: \"How many Harry Potter books are there?\",\n      answerOptions: [\n        { answerText: \"1\", isCorrect: false },\n        { answerText: \"4\", isCorrect: false },\n        { answerText: \"6\", isCorrect: false },\n        { answerText: \"7\", isCorrect: true },\n      ],\n    },\n  ];\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n\n  const [showScore, setShowScore] = useState(false);\n\n  const [score, setScore] = useState(0);\n\n  const handleAnswerButtonClick = (isCorrect) => {\n    if (isCorrect === true) {\n      setScore(score + 1);\n    }\n\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  return (\n  <div className='container'>  \n    <div className=\"app\"> \n      {showScore ? ( //if showScore=true then show the scores.... else show the questions\n        <div className=\"score-section\">\n          You scored {score} out of {questions.length}\n        </div>\n      ) : (\n        <div>\n          <div className='' ></div>\n          <div>\n            <div>\n              <span>Question {currentQuestion + 1}</span>/{questions.length}{\" \"}\n            </div>\n            <div>{questions[currentQuestion].questionText}</div>\n          </div>\n          <div className='' style={{marginTop:'0%'}}>\n            {questions[currentQuestion].answerOptions.map((\n              answerOption ///map through the array of questions showing answerOptions alongSide\n            ) => (\n              <div >\n                <button\n                  style={{ margin: \"10px\" }}\n                  className=\"btn btn-primary\"\n                  onClick={\n                    () => handleAnswerButtonClick(answerOption.isCorrect) //handleAnswerButtonClick function takes an argument of isCorrect to check the answer is correct or not\n                  } //if answer is correct increment score\n                >\n                  {answerOption.answerText}\n                </button>\n                <br />\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}